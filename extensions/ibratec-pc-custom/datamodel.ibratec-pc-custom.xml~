<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
  <constants>
  </constants>
  <classes>
    <class id="Model">
      <fields>
         <field id="type" xsi:type="AttributeEnum" _delta="redefine">
          <values>
            <value id="NetworkDevice">NetworkDevice</value>
            <value id="Server">Server</value>
            <value id="SANSwitch">SANSwitch</value>
            <value id="StorageSystem">StorageSystem</value>
            <value id="Rack">Rack</value>
            <value id="Enclosure">Enclosure</value>
            <value id="PC">PC</value>
            <value id="Tablet">Tablet</value>
            <value id="Phone">Phone</value>
            <value id="MobilePhone">MobilePhone</value>
            <value id="Printer">Printer</value>
            <value id="DiskArray">DiskArray</value>
            <value id="NAS">NAS</value>
            <value id="TapeLibrary">TapeLibrary</value>
            <value id="IPPhone">IPPhone</value>
            <value id="Peripheral">Peripheral</value>
            <value id="PowerSource">PowerSource</value>
            <value id="PDU">PDU</value>
            <value id="Monitor">Monitor</value>
            <value id="AutoTransferSwitch">AutoTransferSwitch</value>
          </values>
          <sql>type</sql>
          <default_value/>
          <is_null_allowed>false</is_null_allowed>
          <display_style>list</display_style>
        </field>
      </fields>
   </class>
    <class id="Printer">
      <fields>
        <field id="managementip_id" xsi:type="AttributeExternalKey" _delta="define">
          <filter><![CDATA[SELECT IPAddress AS ip WHERE (ip.status != 'allocated' OR ip.id = :this->managementip_id) AND ip.org_id = :this->org_id]]></filter>
          <dependencies>
            <attribute id="org_id"/>
         </dependencies>
          <sql>managementip_id</sql>
          <is_null_allowed>true</is_null_allowed>
          <target_class>IPAddress</target_class>
          <on_target_delete>DEL_MANUAL</on_target_delete>
        </field>
        <field id="managementip_name" xsi:type="AttributeExternalField" _delta="define">
          <extkey_attcode>managementip_id</extkey_attcode>
          <target_attcode>fqdn</target_attcode>
        </field>
       </fields>
       <methods>
        <method id="AfterInsert" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function AfterInsert()
    {
                parent::AfterInsert();

                $iIpId = $this->Get('managementip_id');
                if ($iIpId != null)
                {
                        $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                        if (!is_null($oIP))
                        {
                                $oIP->Set('status', 'allocated');
                                $oIP->DBUpdate();
                        }
                }
        }]]></code>
        </method>
        <method id="AfterUpdate" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function AfterUpdate()
    {
                parent::AfterUpdate();

                $iIpId = $this->Get('managementip_id');
                $iPreviousIpId = $this->GetOriginal('managementip_id');
                if ($iIpId != $iPreviousIpId)
                {
                        if ($iIpId != null)
                        {
                                $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                                if ($oIP != null)
                                {
                                        if ($oIP->Get('status') != 'allocated')
                                        {
                                                $oIP->Set('status', 'allocated');
                                                $oIP->DBUpdate();
                                        }
                                }
                        }
                        if ($iPreviousIpId != null)
                        {
                                $oIP = MetaModel::GetObject('IPAddress', $iPreviousIpId, false /* MustBeFound */);
                                if ($oIP != null)
                                {
                                        if ($oIP->Get('status') == 'allocated')
                                        {
                                                $oIP->Set('status', 'unassigned');
                                                $oIP->DBUpdate();
                                        }
                                }
                        }
                }
        }]]></code>
        </method>
        <method id="OnDelete" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function OnDelete()
    {
                parent::OnDelete();

                $iIpId = $this->Get('managementip_id');
                if ($iIpId != null)
                {
                        $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                        if ($oIP != null)
                        {
                                if ($oIP->Get('status') == 'allocated')
                                {
                                        $oIP->Set('status', 'unassigned');
                                        $oIP->DBUpdate();
                                }
                        }
                }
        }]]></code>
        </method>
       </methods>
       <presentation>
        <details>
          <items>
            <item id="contacts_list">
              <rank>10</rank>
            </item>
            <item id="documents_list">
              <rank>20</rank>
            </item>
            <item id="tickets_list">
              <rank>30</rank>
            </item>
            <item id="physicalinterface_list">
              <rank>40</rank>
            </item>
            <item id="networkdevice_list">
              <rank>50</rank>
            </item>
            <item id="providercontracts_list">
              <rank>60</rank>
            </item>
            <item id="services_list">
              <rank>70</rank>
            </item>
            <item id="col:col1">
              <rank>80</rank>
              <items>
                <item id="fieldset:Server:baseinfo">
                  <rank>10</rank>
                  <items>
                    <item id="name">
                      <rank>10</rank>
                    </item>
                    <item id="org_id">
                      <rank>20</rank>
                    </item>
                    <item id="status">
                      <rank>30</rank>
                    </item>
                    <item id="business_criticity">
                      <rank>40</rank>
                    </item>
                    <item id="location_id">
                      <rank>50</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:Server:moreinfo">
                  <rank>20</rank>
                  <items>
                    <item id="brand_id">
                      <rank>10</rank>
                    </item>
                    <item id="model_id">
                      <rank>20</rank>
                    </item>
                    <item id="serialnumber">
                      <rank>30</rank>
                    </item>
                    <item id="asset_number">
                      <rank>40</rank>
                    </item>
                    <item id="managementip_id">
                      <rank>50</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
            <item id="col:col2">
              <rank>90</rank>
              <items>
                <item id="fieldset:Server:Date">
                  <rank>10</rank>
                  <items>
                    <item id="move2production">
                      <rank>10</rank>
                    </item>
                    <item id="purchase_date">
                      <rank>20</rank>
                    </item>
                    <item id="end_of_warranty">
                      <rank>30</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:Server:otherinfo">
                  <rank>20</rank>
                  <items>
                    <item id="description">
                      <rank>10</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
          </items>
        </details>
      </presentation>
    </class>
    <class id="PC">
      <fields>
        <field id="managementip_id" xsi:type="AttributeExternalKey" _delta="define">
          <filter><![CDATA[SELECT ip FROM Organization AS child JOIN Organization AS root ON child.parent_id = root.id  JOIN IPAddress AS ip ON ip.org_id=root.id WHERE child.id=:this->org_id AND (ip.status != 'allocated' OR ip.id = :this->managementip_id) AND ip.org_id =root.id]]></filter>
          <dependencies>
            <attribute id="org_id"/>
         </dependencies>
          <sql>managementip_id</sql>
          <is_null_allowed>true</is_null_allowed>
          <target_class>IPAddress</target_class>
          <on_target_delete>DEL_MANUAL</on_target_delete>
        </field>
        <field id="managementip_name" xsi:type="AttributeExternalField" _delta="define">
          <extkey_attcode>managementip_id</extkey_attcode>
          <target_attcode>fqdn</target_attcode>
        </field>
        <field id="power_id" xsi:type="AttributeExternalKey" _delta="define">
          <filter><![CDATA[SELECT PowerConnection WHERE location_id= :this->location_id]]></filter>
          <dependencies>
            <attribute id="location_id"/>
          </dependencies>
          <sql>power_id</sql>
          <target_class>PowerConnection</target_class>
          <is_null_allowed>true</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
          <allow_target_creation>false</allow_target_creation>
        </field>
        <field id="power_name" xsi:type="AttributeExternalField" _delta="define">
          <extkey_attcode>power_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>

        <field id="brandmon_id" xsi:type="AttributeExternalKey" _delta="define">
          <sql>brandmon_id</sql>
          <target_class>Brand</target_class>
          <is_null_allowed>true</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
        </field>
        <field id="brandmon_name" xsi:type="AttributeExternalField" _delta="define">
          <extkey_attcode>brandmon_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>

        <field id="modelmon_id" xsi:type="AttributeExternalKey" _delta="define">
          <filter><![CDATA[SELECT Model WHERE brand_id=:this->brandmon_id AND type='Monitor']]></filter>
          <dependencies>
            <attribute id="brandmon_id"/>
          </dependencies>
          <sql>modelmon_id</sql>
          <target_class>Model</target_class>
          <is_null_allowed>true</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
        </field>
        <field id="modelmon_name" xsi:type="AttributeExternalField" _delta="define">
          <extkey_attcode>modelmon_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>
        <field id="assetmon_number" xsi:type="AttributeString" _delta="define">
          <sql>assetmon_number</sql>
          <default_value/>
          <is_null_allowed>true</is_null_allowed>
        </field>

      </fields>
      <methods>
        <method id="AfterInsert" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function AfterInsert()
    {
                parent::AfterInsert();

                $iIpId = $this->Get('managementip_id');
                if ($iIpId != null)
                {
                        $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                        if (!is_null($oIP))
                        {
                                $oIP->Set('status', 'allocated');
                                $oIP->DBUpdate();
                        }
                }
        }]]></code>
        </method>
        <method id="AfterUpdate" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function AfterUpdate()
    {
                parent::AfterUpdate();

                $iIpId = $this->Get('managementip_id');
                $iPreviousIpId = $this->GetOriginal('managementip_id');
                if ($iIpId != $iPreviousIpId)
                {
                        if ($iIpId != null)
                        {
                                $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                                if ($oIP != null)
                                {
                                        if ($oIP->Get('status') != 'allocated')
                                        {
                                                $oIP->Set('status', 'allocated');
                                                $oIP->DBUpdate();
                                        }
                                }
                        }
                        if ($iPreviousIpId != null)
                        {
                                $oIP = MetaModel::GetObject('IPAddress', $iPreviousIpId, false /* MustBeFound */);
                                if ($oIP != null)
                                {
                                        if ($oIP->Get('status') == 'allocated')
                                        {
                                                $oIP->Set('status', 'unassigned');
                                                $oIP->DBUpdate();
                                        }
                                }
                        }
                }
        }]]></code>
        </method>
        <method id="OnDelete" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function OnDelete()
    {
                parent::OnDelete();

                $iIpId = $this->Get('managementip_id');
                if ($iIpId != null)
                {
                        $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                        if ($oIP != null)
                        {
                                if ($oIP->Get('status') == 'allocated')
                                {
                                        $oIP->Set('status', 'unassigned');
                                        $oIP->DBUpdate();
                                }
                        }
                }
        }]]></code>
        </method>
        <method id="GetRelationQueries" _delta="define">
          <static>true</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[	public static function GetRelationQueries($sRelCode)
	{
		switch ($sRelCode)
		{
		case "depends on":
            $aRels = array();
            if (class_exists('PowerConnection'))
            {
              $aRels['Power'] = array(
                 "sQuery"=>"SELECT PowerConnection WHERE id = :this->power_id",
					  "bPropagate"=>true,
                 "iDistance"=>10
              );
            }
			return array_merge($aRels, parent::GetRelationQueries($sRelCode));
			break;
		default:
			return parent::GetRelationQueries($sRelCode);
		}
	}]]></code>
        </method>
      </methods>
      <presentation>
        <details>
          <items>
            <item id="softwares_list">
              <rank>5</rank>
            </item>
            <item id="contacts_list">
              <rank>10</rank>
            </item>
            <item id="documents_list">
              <rank>20</rank>
            </item>
            <item id="tickets_list">
              <rank>30</rank>
            </item>
            <item id="physicalinterface_list">
              <rank>40</rank>
            </item>
            <item id="networkdevice_list">
              <rank>50</rank>
            </item>
            <item id="providercontracts_list">
              <rank>60</rank>
            </item>
            <item id="services_list">
              <rank>70</rank>
            </item>
            <item id="col:col1">
              <rank>80</rank>
              <items>
                <item id="fieldset:Server:baseinfo">
                  <rank>10</rank>
                  <items>
                    <item id="name">
                      <rank>10</rank>
                    </item>
                    <item id="org_id">
                      <rank>20</rank>
                    </item>
                    <item id="status">
                      <rank>30</rank>
                    </item>
                    <item id="business_criticity">
                     <rank>40</rank>
                    </item>
                    <item id="location_id">
                      <rank>50</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:Server:moreinfo">
                  <rank>20</rank>
                  <items>
                    <item id="brand_id">
                      <rank>10</rank>
                    </item>
                    <item id="model_id">
                      <rank>20</rank>
                    </item>
                    <item id="osfamily_id">
                      <rank>30</rank>
                    </item>
                    <item id="osversion_id">
                      <rank>40</rank>
                    </item>
                    <item id="type">
                      <rank>50</rank>
                    </item>
                    <item id="cpu">
                      <rank>60</rank>
                    </item>
                    <item id="ram">
                      <rank>70</rank>
                    </item>
                    <item id="managementip_id">
                      <rank>80</rank>
                    </item>
                    <item id="serialnumber">
                      <rank>90</rank>
                    </item>
                    <item id="asset_number">
                      <rank>100</rank>
                    </item>
                    <item id="power_id">
                      <rank>110</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
            <item id="col:col2">
              <rank>90</rank>
              <items>
                <item id="fieldset:Server:Date">
                  <rank>10</rank>
                  <items>
                    <item id="move2production">
                      <rank>10</rank>
                    </item>
                    <item id="purchase_date">
                      <rank>20</rank>
                    </item>
                    <item id="end_of_warranty">
                      <rank>30</rank>
                    </item>
                  </items>
                </item>
                <item id="fieldset:Server:otherinfo">
                  <rank>20</rank>
                  <items>
                    <item id="description">
                      <rank>10</rank>
                    </item>
                    <item id="brandmon_id">
                      <rank>20</rank>
                    </item>
                    <item id="modelmon_id">
                      <rank>30</rank>
                    </item>
                    <item id="assetmon_number">
                      <rank>40</rank>
                    </item>
                  </items>
                </item>
              </items>
            </item>
          </items>
        </details>
      </presentation>
     </class>
    <class id="AutoTransferSwitch" _delta="define">
      <parent>PowerConnection</parent>
      <properties>
        <category>bizmodel,searchable</category>
        <abstract>false</abstract>
        <key_type>autoincrement</key_type>
        <db_table>autotransferswitch</db_table>
        <db_key_field>id</db_key_field>
        <db_final_class_field/>
        <naming>
          <attributes>
            <attribute id="name"/>
          </attributes>
        </naming>
        <display_template/>
        <icon>images/ats.png</icon>
        <reconciliation>
          <attributes>
            <attribute id="name"/>
            <attribute id="org_id"/>
            <attribute id="organization_name"/>
          </attributes>
        </reconciliation>
      </properties>
      <fields>
        <field id="pdus_list" xsi:type="AttributeLinkedSet">
          <linked_class>PDU</linked_class>
          <ext_key_to_me>powerstart_id</ext_key_to_me>
          <edit_mode>add_only</edit_mode>
          <count_min>0</count_min>
          <count_max>0</count_max>
        </field>
        <field id="powerA_id" xsi:type="AttributeExternalKey">
          <filter><![CDATA[SELECT PowerConnection WHERE location_id= :this->location_id]]></filter>
          <dependencies>
            <attribute id="location_id"/>
          </dependencies>
          <sql>powera_id</sql>
          <target_class>PowerConnection</target_class>
          <is_null_allowed>true</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
          <allow_target_creation>false</allow_target_creation>
        </field>
        <field id="powerA_name" xsi:type="AttributeExternalField">
          <extkey_attcode>powerA_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>
        <field id="powerB_id" xsi:type="AttributeExternalKey">
          <filter><![CDATA[SELECT PowerConnection WHERE location_id= :this->location_id]]></filter>
          <dependencies>
            <attribute id="location_id"/>
          </dependencies>
          <sql>powerB_id</sql>
          <target_class>PowerConnection</target_class>
          <is_null_allowed>true</is_null_allowed>
          <on_target_delete>DEL_MANUAL</on_target_delete>
          <allow_target_creation>false</allow_target_creation>
        </field>
        <field id="powerB_name" xsi:type="AttributeExternalField">
          <extkey_attcode>powerB_id</extkey_attcode>
          <target_attcode>name</target_attcode>
        </field>
        <field id="managementip_id" xsi:type="AttributeExternalKey" _delta="define">
          <filter><![CDATA[SELECT IPAddress AS ip WHERE (ip.status != 'allocated' OR ip.id = :this->managementip_id) AND ip.org_id = :this->org_id]]></filter>
          <dependencies>
            <attribute id="org_id"/>
         </dependencies>
          <sql>managementip_id</sql>
          <is_null_allowed>true</is_null_allowed>
          <target_class>IPAddress</target_class>
          <on_target_delete>DEL_MANUAL</on_target_delete>
        </field>
        <field id="managementip_name" xsi:type="AttributeExternalField" _delta="define">
          <extkey_attcode>managementip_id</extkey_attcode>
          <target_attcode>fqdn</target_attcode>
        </field>
      </fields>
      <methods>
        <method id="GetRelationQueries">
          <static>true</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[	public static function GetRelationQueries($sRelCode)
	{
		switch ($sRelCode)
		{
		case "depends on":
            $aRels = array();
            if (class_exists('PowerConnection'))
            {
              $aRels['PowerA'] = array(
                 "sQuery"=>"SELECT PowerConnection WHERE id = :this->powerA_id",
					  "bPropagate"=>true,
                 "iDistance"=>10
              );
              $aRels['PowerB'] = array(
                 "sQuery"=>"SELECT PowerConnection WHERE id = :this->powerB_id",
					  "bPropagate"=>true,
                 "iDistance"=>10
              );
            }
			return array_merge($aRels, parent::GetRelationQueries($sRelCode));
			break;
		default:
			return parent::GetRelationQueries($sRelCode);
		}
	}]]></code>
        </method>
        <method id="AfterInsert" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function AfterInsert()
    {
                parent::AfterInsert();

                $iIpId = $this->Get('managementip_id');
                if ($iIpId != null)
                {
                        $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                        if (!is_null($oIP))
                        {
                                $oIP->Set('status', 'allocated');
                                $oIP->DBUpdate();
                        }
                }
        }]]></code>
        </method>
        <method id="AfterUpdate" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function AfterUpdate()
    {
                parent::AfterUpdate();

                $iIpId = $this->Get('managementip_id');
                $iPreviousIpId = $this->GetOriginal('managementip_id');
                if ($iIpId != $iPreviousIpId)
                {
                        if ($iIpId != null)
                        {
                                $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                                if ($oIP != null)
                                {
                                        if ($oIP->Get('status') != 'allocated')
                                        {
                                                $oIP->Set('status', 'allocated');
                                                $oIP->DBUpdate();
                                        }
                                }
                        }
                        if ($iPreviousIpId != null)
                        {
                                $oIP = MetaModel::GetObject('IPAddress', $iPreviousIpId, false /* MustBeFound */);
                                if ($oIP != null)
                                {
                                        if ($oIP->Get('status') == 'allocated')
                                        {
                                                $oIP->Set('status', 'unassigned');
                                                $oIP->DBUpdate();
                                        }
                                }
                        }
                }
        }]]></code>
        </method>
        <method id="OnDelete" _delta="define">
          <comment/>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[       public function OnDelete()
    {
                parent::OnDelete();

                $iIpId = $this->Get('managementip_id');
                if ($iIpId != null)
                {
                        $oIP = MetaModel::GetObject('IPAddress', $iIpId, false /* MustBeFound */);
                        if ($oIP != null)
                        {
                                if ($oIP->Get('status') == 'allocated')
                                {
                                        $oIP->Set('status', 'unassigned');
                                        $oIP->DBUpdate();
                                }
                        }
                }
        }]]></code>
        </method>
      </methods>
      <presentation>
        <details>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="org_id">
              <rank>20</rank>
            </item>
            <item id="status">
              <rank>30</rank>
            </item>
            <item id="business_criticity">
              <rank>40</rank>
            </item>
            <item id="location_id">
              <rank>50</rank>
            </item>
            <item id="brand_id">
              <rank>60</rank>
            </item>
            <item id="model_id">
              <rank>70</rank>
            </item>
            <item id="serialnumber">
              <rank>80</rank>
            </item>
            <item id="asset_number">
              <rank>90</rank>
            </item>
            <item id="move2production">
              <rank>100</rank>
            </item>
            <item id="purchase_date">
              <rank>110</rank>
            </item>
            <item id="end_of_warranty">
              <rank>120</rank>
            </item>
            <item id="description">
              <rank>130</rank>
            </item>
            <item id="pdus_list">
              <rank>140</rank>
            </item>
            <item id="contacts_list">
              <rank>150</rank>
            </item>
            <item id="documents_list">
              <rank>160</rank>
            </item>
            <item id="tickets_list">
              <rank>170</rank>
            </item>
            <item id="providercontracts_list">
              <rank>180</rank>
            </item>
            <item id="services_list">
              <rank>190</rank>
            </item>
            <item id="powerA_id">
              <rank>200</rank>
            </item>
            <item id="powerB_id">
              <rank>210</rank>
            </item>
            <item id="managementip_id">
              <rank>220</rank>
            </item>
          </items>
        </details>
        <search>
          <items>
            <item id="name">
              <rank>10</rank>
            </item>
            <item id="org_id">
              <rank>20</rank>
            </item>
            <item id="status">
              <rank>30</rank>
            </item>
            <item id="business_criticity">
              <rank>40</rank>
            </item>
            <item id="location_id">
              <rank>50</rank>
            </item>
            <item id="brand_id">
              <rank>60</rank>
            </item>
            <item id="model_id">
              <rank>70</rank>
            </item>
            <item id="serialnumber">
              <rank>80</rank>
            </item>
            <item id="asset_number">
              <rank>90</rank>
            </item>
            <item id="move2production">
              <rank>100</rank>
            </item>
            <item id="purchase_date">
              <rank>110</rank>
            </item>
            <item id="end_of_warranty">
              <rank>120</rank>
            </item>
          </items>
        </search>
        <list>
          <items>
            <item id="org_id">
              <rank>10</rank>
            </item>
            <item id="status">
              <rank>20</rank>
            </item>
            <item id="business_criticity">
              <rank>30</rank>
            </item>
            <item id="location_id">
              <rank>40</rank>
            </item>
            <item id="brand_id">
              <rank>50</rank>
            </item>
            <item id="model_id">
              <rank>60</rank>
            </item>
            <item id="serialnumber">
              <rank>70</rank>
            </item>
          </items>
        </list>
      </presentation>
    </class>
  </classes>
  <user_rights>
    <groups>
    </groups>
    <profiles>
    </profiles>
  </user_rights>
</itop_design>
